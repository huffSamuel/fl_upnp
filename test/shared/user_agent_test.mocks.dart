// Mocks generated by Mockito 5.4.4 from annotations
// in upnped/test/shared/user_agent_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;
import 'dart:typed_data' as _i13;

import 'package:device_info_plus/device_info_plus.dart' as _i11;
import 'package:device_info_plus/src/model/android_device_info.dart' as _i2;
import 'package:device_info_plus/src/model/ios_device_info.dart' as _i3;
import 'package:device_info_plus/src/model/linux_device_info.dart' as _i4;
import 'package:device_info_plus/src/model/macos_device_info.dart' as _i6;
import 'package:device_info_plus/src/model/web_browser_info.dart' as _i5;
import 'package:device_info_plus/src/model/windows_device_info.dart' as _i7;
import 'package:device_info_plus_platform_interface/device_info_plus_platform_interface.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;
import 'package:platform/src/interface/local_platform.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUri_0 extends _i1.SmartFake implements Uri {
  _FakeUri_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidDeviceInfo_1 extends _i1.SmartFake
    implements _i2.AndroidDeviceInfo {
  _FakeAndroidDeviceInfo_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIosDeviceInfo_2 extends _i1.SmartFake implements _i3.IosDeviceInfo {
  _FakeIosDeviceInfo_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLinuxDeviceInfo_3 extends _i1.SmartFake
    implements _i4.LinuxDeviceInfo {
  _FakeLinuxDeviceInfo_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebBrowserInfo_4 extends _i1.SmartFake
    implements _i5.WebBrowserInfo {
  _FakeWebBrowserInfo_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMacOsDeviceInfo_5 extends _i1.SmartFake
    implements _i6.MacOsDeviceInfo {
  _FakeMacOsDeviceInfo_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowsDeviceInfo_6 extends _i1.SmartFake
    implements _i7.WindowsDeviceInfo {
  _FakeWindowsDeviceInfo_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseDeviceInfo_7 extends _i1.SmartFake
    implements _i8.BaseDeviceInfo {
  _FakeBaseDeviceInfo_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidBuildVersion_8 extends _i1.SmartFake
    implements _i2.AndroidBuildVersion {
  _FakeAndroidBuildVersion_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIosUtsname_9 extends _i1.SmartFake implements _i3.IosUtsname {
  _FakeIosUtsname_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_10 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocalPlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalPlatform extends _i1.Mock implements _i9.LocalPlatform {
  @override
  int get numberOfProcessors => (super.noSuchMethod(
        Invocation.getter(#numberOfProcessors),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  String get pathSeparator => (super.noSuchMethod(
        Invocation.getter(#pathSeparator),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#pathSeparator),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#pathSeparator),
        ),
      ) as String);

  @override
  String get operatingSystem => (super.noSuchMethod(
        Invocation.getter(#operatingSystem),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#operatingSystem),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#operatingSystem),
        ),
      ) as String);

  @override
  String get operatingSystemVersion => (super.noSuchMethod(
        Invocation.getter(#operatingSystemVersion),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#operatingSystemVersion),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#operatingSystemVersion),
        ),
      ) as String);

  @override
  String get localHostname => (super.noSuchMethod(
        Invocation.getter(#localHostname),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#localHostname),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#localHostname),
        ),
      ) as String);

  @override
  Map<String, String> get environment => (super.noSuchMethod(
        Invocation.getter(#environment),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);

  @override
  String get executable => (super.noSuchMethod(
        Invocation.getter(#executable),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#executable),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#executable),
        ),
      ) as String);

  @override
  String get resolvedExecutable => (super.noSuchMethod(
        Invocation.getter(#resolvedExecutable),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#resolvedExecutable),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#resolvedExecutable),
        ),
      ) as String);

  @override
  Uri get script => (super.noSuchMethod(
        Invocation.getter(#script),
        returnValue: _FakeUri_0(
          this,
          Invocation.getter(#script),
        ),
        returnValueForMissingStub: _FakeUri_0(
          this,
          Invocation.getter(#script),
        ),
      ) as Uri);

  @override
  List<String> get executableArguments => (super.noSuchMethod(
        Invocation.getter(#executableArguments),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  String get version => (super.noSuchMethod(
        Invocation.getter(#version),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#version),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#version),
        ),
      ) as String);

  @override
  bool get stdinSupportsAnsi => (super.noSuchMethod(
        Invocation.getter(#stdinSupportsAnsi),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get stdoutSupportsAnsi => (super.noSuchMethod(
        Invocation.getter(#stdoutSupportsAnsi),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String get localeName => (super.noSuchMethod(
        Invocation.getter(#localeName),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#localeName),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#localeName),
        ),
      ) as String);

  @override
  bool get isLinux => (super.noSuchMethod(
        Invocation.getter(#isLinux),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isMacOS => (super.noSuchMethod(
        Invocation.getter(#isMacOS),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isWindows => (super.noSuchMethod(
        Invocation.getter(#isWindows),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isAndroid => (super.noSuchMethod(
        Invocation.getter(#isAndroid),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isIOS => (super.noSuchMethod(
        Invocation.getter(#isIOS),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isFuchsia => (super.noSuchMethod(
        Invocation.getter(#isFuchsia),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #toJson,
            [],
          ),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #toJson,
            [],
          ),
        ),
      ) as String);
}

/// A class which mocks [DeviceInfoPlugin].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceInfoPlugin extends _i1.Mock implements _i11.DeviceInfoPlugin {
  @override
  _i12.Future<_i2.AndroidDeviceInfo> get androidInfo => (super.noSuchMethod(
        Invocation.getter(#androidInfo),
        returnValue:
            _i12.Future<_i2.AndroidDeviceInfo>.value(_FakeAndroidDeviceInfo_1(
          this,
          Invocation.getter(#androidInfo),
        )),
        returnValueForMissingStub:
            _i12.Future<_i2.AndroidDeviceInfo>.value(_FakeAndroidDeviceInfo_1(
          this,
          Invocation.getter(#androidInfo),
        )),
      ) as _i12.Future<_i2.AndroidDeviceInfo>);

  @override
  _i12.Future<_i3.IosDeviceInfo> get iosInfo => (super.noSuchMethod(
        Invocation.getter(#iosInfo),
        returnValue: _i12.Future<_i3.IosDeviceInfo>.value(_FakeIosDeviceInfo_2(
          this,
          Invocation.getter(#iosInfo),
        )),
        returnValueForMissingStub:
            _i12.Future<_i3.IosDeviceInfo>.value(_FakeIosDeviceInfo_2(
          this,
          Invocation.getter(#iosInfo),
        )),
      ) as _i12.Future<_i3.IosDeviceInfo>);

  @override
  _i12.Future<_i4.LinuxDeviceInfo> get linuxInfo => (super.noSuchMethod(
        Invocation.getter(#linuxInfo),
        returnValue:
            _i12.Future<_i4.LinuxDeviceInfo>.value(_FakeLinuxDeviceInfo_3(
          this,
          Invocation.getter(#linuxInfo),
        )),
        returnValueForMissingStub:
            _i12.Future<_i4.LinuxDeviceInfo>.value(_FakeLinuxDeviceInfo_3(
          this,
          Invocation.getter(#linuxInfo),
        )),
      ) as _i12.Future<_i4.LinuxDeviceInfo>);

  @override
  _i12.Future<_i5.WebBrowserInfo> get webBrowserInfo => (super.noSuchMethod(
        Invocation.getter(#webBrowserInfo),
        returnValue:
            _i12.Future<_i5.WebBrowserInfo>.value(_FakeWebBrowserInfo_4(
          this,
          Invocation.getter(#webBrowserInfo),
        )),
        returnValueForMissingStub:
            _i12.Future<_i5.WebBrowserInfo>.value(_FakeWebBrowserInfo_4(
          this,
          Invocation.getter(#webBrowserInfo),
        )),
      ) as _i12.Future<_i5.WebBrowserInfo>);

  @override
  _i12.Future<_i6.MacOsDeviceInfo> get macOsInfo => (super.noSuchMethod(
        Invocation.getter(#macOsInfo),
        returnValue:
            _i12.Future<_i6.MacOsDeviceInfo>.value(_FakeMacOsDeviceInfo_5(
          this,
          Invocation.getter(#macOsInfo),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.MacOsDeviceInfo>.value(_FakeMacOsDeviceInfo_5(
          this,
          Invocation.getter(#macOsInfo),
        )),
      ) as _i12.Future<_i6.MacOsDeviceInfo>);

  @override
  _i12.Future<_i7.WindowsDeviceInfo> get windowsInfo => (super.noSuchMethod(
        Invocation.getter(#windowsInfo),
        returnValue:
            _i12.Future<_i7.WindowsDeviceInfo>.value(_FakeWindowsDeviceInfo_6(
          this,
          Invocation.getter(#windowsInfo),
        )),
        returnValueForMissingStub:
            _i12.Future<_i7.WindowsDeviceInfo>.value(_FakeWindowsDeviceInfo_6(
          this,
          Invocation.getter(#windowsInfo),
        )),
      ) as _i12.Future<_i7.WindowsDeviceInfo>);

  @override
  _i12.Future<_i8.BaseDeviceInfo> get deviceInfo => (super.noSuchMethod(
        Invocation.getter(#deviceInfo),
        returnValue:
            _i12.Future<_i8.BaseDeviceInfo>.value(_FakeBaseDeviceInfo_7(
          this,
          Invocation.getter(#deviceInfo),
        )),
        returnValueForMissingStub:
            _i12.Future<_i8.BaseDeviceInfo>.value(_FakeBaseDeviceInfo_7(
          this,
          Invocation.getter(#deviceInfo),
        )),
      ) as _i12.Future<_i8.BaseDeviceInfo>);
}

/// A class which mocks [AndroidDeviceInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockAndroidDeviceInfo extends _i1.Mock implements _i2.AndroidDeviceInfo {
  @override
  _i2.AndroidBuildVersion get version => (super.noSuchMethod(
        Invocation.getter(#version),
        returnValue: _FakeAndroidBuildVersion_8(
          this,
          Invocation.getter(#version),
        ),
        returnValueForMissingStub: _FakeAndroidBuildVersion_8(
          this,
          Invocation.getter(#version),
        ),
      ) as _i2.AndroidBuildVersion);

  @override
  String get board => (super.noSuchMethod(
        Invocation.getter(#board),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#board),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#board),
        ),
      ) as String);

  @override
  String get bootloader => (super.noSuchMethod(
        Invocation.getter(#bootloader),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#bootloader),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#bootloader),
        ),
      ) as String);

  @override
  String get brand => (super.noSuchMethod(
        Invocation.getter(#brand),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#brand),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#brand),
        ),
      ) as String);

  @override
  String get device => (super.noSuchMethod(
        Invocation.getter(#device),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#device),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#device),
        ),
      ) as String);

  @override
  String get display => (super.noSuchMethod(
        Invocation.getter(#display),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#display),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#display),
        ),
      ) as String);

  @override
  String get fingerprint => (super.noSuchMethod(
        Invocation.getter(#fingerprint),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#fingerprint),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#fingerprint),
        ),
      ) as String);

  @override
  String get hardware => (super.noSuchMethod(
        Invocation.getter(#hardware),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#hardware),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#hardware),
        ),
      ) as String);

  @override
  String get host => (super.noSuchMethod(
        Invocation.getter(#host),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
      ) as String);

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  String get manufacturer => (super.noSuchMethod(
        Invocation.getter(#manufacturer),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#manufacturer),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#manufacturer),
        ),
      ) as String);

  @override
  String get model => (super.noSuchMethod(
        Invocation.getter(#model),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#model),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#model),
        ),
      ) as String);

  @override
  String get product => (super.noSuchMethod(
        Invocation.getter(#product),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#product),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#product),
        ),
      ) as String);

  @override
  List<String> get supported32BitAbis => (super.noSuchMethod(
        Invocation.getter(#supported32BitAbis),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  List<String> get supported64BitAbis => (super.noSuchMethod(
        Invocation.getter(#supported64BitAbis),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  List<String> get supportedAbis => (super.noSuchMethod(
        Invocation.getter(#supportedAbis),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  String get tags => (super.noSuchMethod(
        Invocation.getter(#tags),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#tags),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#tags),
        ),
      ) as String);

  @override
  String get type => (super.noSuchMethod(
        Invocation.getter(#type),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#type),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#type),
        ),
      ) as String);

  @override
  bool get isPhysicalDevice => (super.noSuchMethod(
        Invocation.getter(#isPhysicalDevice),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<String> get systemFeatures => (super.noSuchMethod(
        Invocation.getter(#systemFeatures),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  String get serialNumber => (super.noSuchMethod(
        Invocation.getter(#serialNumber),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#serialNumber),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#serialNumber),
        ),
      ) as String);

  @override
  bool get isLowRamDevice => (super.noSuchMethod(
        Invocation.getter(#isLowRamDevice),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  Map<String, dynamic> get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [AndroidBuildVersion].
///
/// See the documentation for Mockito's code generation for more information.
class MockAndroidBuildVersion extends _i1.Mock
    implements _i2.AndroidBuildVersion {
  @override
  String get codename => (super.noSuchMethod(
        Invocation.getter(#codename),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#codename),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#codename),
        ),
      ) as String);

  @override
  String get incremental => (super.noSuchMethod(
        Invocation.getter(#incremental),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#incremental),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#incremental),
        ),
      ) as String);

  @override
  String get release => (super.noSuchMethod(
        Invocation.getter(#release),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#release),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#release),
        ),
      ) as String);

  @override
  int get sdkInt => (super.noSuchMethod(
        Invocation.getter(#sdkInt),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [IosDeviceInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockIosDeviceInfo extends _i1.Mock implements _i3.IosDeviceInfo {
  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  String get systemName => (super.noSuchMethod(
        Invocation.getter(#systemName),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#systemName),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#systemName),
        ),
      ) as String);

  @override
  String get systemVersion => (super.noSuchMethod(
        Invocation.getter(#systemVersion),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#systemVersion),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#systemVersion),
        ),
      ) as String);

  @override
  String get model => (super.noSuchMethod(
        Invocation.getter(#model),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#model),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#model),
        ),
      ) as String);

  @override
  String get localizedModel => (super.noSuchMethod(
        Invocation.getter(#localizedModel),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#localizedModel),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#localizedModel),
        ),
      ) as String);

  @override
  bool get isPhysicalDevice => (super.noSuchMethod(
        Invocation.getter(#isPhysicalDevice),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i3.IosUtsname get utsname => (super.noSuchMethod(
        Invocation.getter(#utsname),
        returnValue: _FakeIosUtsname_9(
          this,
          Invocation.getter(#utsname),
        ),
        returnValueForMissingStub: _FakeIosUtsname_9(
          this,
          Invocation.getter(#utsname),
        ),
      ) as _i3.IosUtsname);

  @override
  Map<String, dynamic> get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [MacOsDeviceInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockMacOsDeviceInfo extends _i1.Mock implements _i6.MacOsDeviceInfo {
  @override
  String get computerName => (super.noSuchMethod(
        Invocation.getter(#computerName),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#computerName),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#computerName),
        ),
      ) as String);

  @override
  String get hostName => (super.noSuchMethod(
        Invocation.getter(#hostName),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#hostName),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#hostName),
        ),
      ) as String);

  @override
  String get arch => (super.noSuchMethod(
        Invocation.getter(#arch),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#arch),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#arch),
        ),
      ) as String);

  @override
  String get model => (super.noSuchMethod(
        Invocation.getter(#model),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#model),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#model),
        ),
      ) as String);

  @override
  String get kernelVersion => (super.noSuchMethod(
        Invocation.getter(#kernelVersion),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#kernelVersion),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#kernelVersion),
        ),
      ) as String);

  @override
  String get osRelease => (super.noSuchMethod(
        Invocation.getter(#osRelease),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#osRelease),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#osRelease),
        ),
      ) as String);

  @override
  int get majorVersion => (super.noSuchMethod(
        Invocation.getter(#majorVersion),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get minorVersion => (super.noSuchMethod(
        Invocation.getter(#minorVersion),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get patchVersion => (super.noSuchMethod(
        Invocation.getter(#patchVersion),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get activeCPUs => (super.noSuchMethod(
        Invocation.getter(#activeCPUs),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get memorySize => (super.noSuchMethod(
        Invocation.getter(#memorySize),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get cpuFrequency => (super.noSuchMethod(
        Invocation.getter(#cpuFrequency),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  Map<String, dynamic> get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [WindowsDeviceInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockWindowsDeviceInfo extends _i1.Mock implements _i7.WindowsDeviceInfo {
  @override
  String get computerName => (super.noSuchMethod(
        Invocation.getter(#computerName),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#computerName),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#computerName),
        ),
      ) as String);

  @override
  int get numberOfCores => (super.noSuchMethod(
        Invocation.getter(#numberOfCores),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get systemMemoryInMegabytes => (super.noSuchMethod(
        Invocation.getter(#systemMemoryInMegabytes),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  String get userName => (super.noSuchMethod(
        Invocation.getter(#userName),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#userName),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#userName),
        ),
      ) as String);

  @override
  int get majorVersion => (super.noSuchMethod(
        Invocation.getter(#majorVersion),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get minorVersion => (super.noSuchMethod(
        Invocation.getter(#minorVersion),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get buildNumber => (super.noSuchMethod(
        Invocation.getter(#buildNumber),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get platformId => (super.noSuchMethod(
        Invocation.getter(#platformId),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  String get csdVersion => (super.noSuchMethod(
        Invocation.getter(#csdVersion),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#csdVersion),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#csdVersion),
        ),
      ) as String);

  @override
  int get servicePackMajor => (super.noSuchMethod(
        Invocation.getter(#servicePackMajor),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get servicePackMinor => (super.noSuchMethod(
        Invocation.getter(#servicePackMinor),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get suitMask => (super.noSuchMethod(
        Invocation.getter(#suitMask),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get productType => (super.noSuchMethod(
        Invocation.getter(#productType),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get reserved => (super.noSuchMethod(
        Invocation.getter(#reserved),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  String get buildLab => (super.noSuchMethod(
        Invocation.getter(#buildLab),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#buildLab),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#buildLab),
        ),
      ) as String);

  @override
  String get buildLabEx => (super.noSuchMethod(
        Invocation.getter(#buildLabEx),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#buildLabEx),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#buildLabEx),
        ),
      ) as String);

  @override
  _i13.Uint8List get digitalProductId => (super.noSuchMethod(
        Invocation.getter(#digitalProductId),
        returnValue: _i13.Uint8List(0),
        returnValueForMissingStub: _i13.Uint8List(0),
      ) as _i13.Uint8List);

  @override
  String get displayVersion => (super.noSuchMethod(
        Invocation.getter(#displayVersion),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#displayVersion),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#displayVersion),
        ),
      ) as String);

  @override
  String get editionId => (super.noSuchMethod(
        Invocation.getter(#editionId),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#editionId),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#editionId),
        ),
      ) as String);

  @override
  DateTime get installDate => (super.noSuchMethod(
        Invocation.getter(#installDate),
        returnValue: _FakeDateTime_10(
          this,
          Invocation.getter(#installDate),
        ),
        returnValueForMissingStub: _FakeDateTime_10(
          this,
          Invocation.getter(#installDate),
        ),
      ) as DateTime);

  @override
  String get productId => (super.noSuchMethod(
        Invocation.getter(#productId),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#productId),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#productId),
        ),
      ) as String);

  @override
  String get productName => (super.noSuchMethod(
        Invocation.getter(#productName),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#productName),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#productName),
        ),
      ) as String);

  @override
  String get registeredOwner => (super.noSuchMethod(
        Invocation.getter(#registeredOwner),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#registeredOwner),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#registeredOwner),
        ),
      ) as String);

  @override
  String get releaseId => (super.noSuchMethod(
        Invocation.getter(#releaseId),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#releaseId),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#releaseId),
        ),
      ) as String);

  @override
  String get deviceId => (super.noSuchMethod(
        Invocation.getter(#deviceId),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#deviceId),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#deviceId),
        ),
      ) as String);

  @override
  Map<String, dynamic> get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [LinuxDeviceInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockLinuxDeviceInfo extends _i1.Mock implements _i4.LinuxDeviceInfo {
  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  String get prettyName => (super.noSuchMethod(
        Invocation.getter(#prettyName),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#prettyName),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#prettyName),
        ),
      ) as String);

  @override
  Map<String, dynamic> get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
